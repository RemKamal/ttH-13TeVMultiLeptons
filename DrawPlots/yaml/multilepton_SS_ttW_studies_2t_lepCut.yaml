label: ttV_SS_lepCuts_v1
output label: ttV_SS_lepCuts_v1
luminosity: 19450.0
input_trees_directory: tree_files
output directory: histos_SS_ttW_studies_2t_lepCut
limits output directory: histos_SS_ttW_studies_2t_lepCut_forLimits

#options
skip systematics: true
limits skip systematics: false

#cuts
common cuts:
    cleanup: min_mass_leplep_all > 12
    2_leptons: (numAllLeptons == 2 || numAllLeptons == 3)
    3rd_lepton: (numAllLeptons == 2 || (all_leptons_by_pt_3_lepCut < 1 || all_leptons_by_pt_3_pt < 10) )
    z_mask: (numAllElectrons < 2 || abs(ZLike_mass_leplep_SF_all-91.2) > 10)
    lepton_pt: all_leptons_by_pt_1_pt > 20 && all_leptons_by_pt_2_pt > 10
    tight_charge: all_leptons_by_pt_1_CERN_tight_charge && all_leptons_by_pt_2_CERN_tight_charge ##Now includes conv_veto and inner_hits
    lepCSV: all_leptons_by_pt_1_lepCut >= 0 && all_leptons_by_pt_2_lepCut >= 0
    2_tight: all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2
    same_charge: all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == 1
    
jet tag categories:
#     eq2j: ['numJets == 2']
#     eq3j: ['numJets == 3']
#     ge4j: ['numJets >= 4']
#     eq2j_metLD: ['numJets == 2 && met_ld > 0.2']
#     eq3j_metLD: ['numJets == 3 && met_ld > 0.2']
#     ge4j_metLD: ['numJets >= 4 && met_ld > 0.2']
#     eq2j_bloose: ['numJets == 2 && (numLooseBJets >= 2 || numMediumBJets >= 1)']
#     eq3j_bloose: ['numJets == 3 && (numLooseBJets >= 2 || numMediumBJets >= 1)']
#     ge4j_bloose: ['numJets >= 4 && (numLooseBJets >= 2 || numMediumBJets >= 1)']
#     eq2j_metLD_bloose: ['numJets == 2 && met_ld > 0.2 && (numLooseBJets >= 2 || numMediumBJets >= 1)']
#     eq3j_metLD_bloose: ['numJets == 3 && met_ld > 0.2 && (numLooseBJets >= 2 || numMediumBJets >= 1)']
#     ge4j_metLD_bloose: ['numJets >= 4 && met_ld > 0.2 && (numLooseBJets >= 2 || numMediumBJets >= 1)']

#     eq0j: ['numJets == 0']
#     eq1j: ['numJets == 1']
#     eq2j: ['numJets == 2']
    eq3j_lf: ['numJets == 3 && numLooseBJets < 2 && numMediumBJets == 0']
    ge4j_lf: ['numJets >= 4 && numLooseBJets < 2 && numMediumBJets == 0']
    eq3j_bloose: ['numJets == 3 && (numLooseBJets >= 2 || numMediumBJets >= 1)']
    ge4j_bloose: ['numJets >= 4 && (numLooseBJets >= 2 || numMediumBJets >= 1)']

#     ge0j_Zpeak: ['numJets >= 0 && abs(ZLike_mass_leplep_SF_all-91.2) < 10']
#     eq0j_Zpeak: ['numJets == 0 && abs(ZLike_mass_leplep_SF_all-91.2) < 10']
#     eq1j_Zpeak: ['numJets == 1 && abs(ZLike_mass_leplep_SF_all-91.2) < 10']
#     eq2j_Zpeak: ['numJets == 2 && abs(ZLike_mass_leplep_SF_all-91.2) < 10']

#     ge4j_ttH: ['numJets >= 4 && (numLooseBJets >= 2 || numMediumBJets >= 1) && (all_leptons_by_pt_1_pt + all_leptons_by_pt_2_pt + met_pt) > 100 && all_leptons_by_pt_2_pt > 20']

#     ttbar: ['((numJets == 2 && numMediumBJets >= 1) || (numJets == 3 && numMediumBJets == 1))']
#     ttbar_high_BDT: ['((numJets == 2 && numMediumBJets >= 1) || (numJets == 3 && numMediumBJets == 1)) && FinalBDT_ttW_SS > 0.6']

lepton categories:
    mu_mu:
        data samples: [DoubleMu]
        cuts:
            mu_mu: (all_leptons_by_pt_1_isMuon + all_leptons_by_pt_2_isMuon) == 2
            isDoubleMuTriggerPass: isDoubleMuTriggerPass
    mu_ele:
        data samples: [MuEG]
        cuts:
            mu_ele: (all_leptons_by_pt_1_isMuon + all_leptons_by_pt_2_isMuon) == 1
            isMuEGTriggerPass: isMuEGTriggerPass
    ele_ele:
        data samples: [DoubleElectron]
        cuts:
            ele_ele: (all_leptons_by_pt_1_isMuon + all_leptons_by_pt_2_isMuon) == 0
            isDoubleElectronTriggerPass: isDoubleElectronTriggerPass
#     SS:
#         data samples: [inclusive_data]
#         cuts:
#             trigger: '((dataset == "MC" && (isDoubleMuTriggerPass || isDoubleMuTriggerPass || isMuEGTriggerPass || isTripleElectronTriggerPass)) ||
#                 (dataset == "DoubleMu" && isDoubleMuTriggerPass) ||
#                 (dataset == "DoubleElectron" && (!isDoubleMuTriggerPass) && (isDoubleElectronTriggerPass || isTripleElectronTriggerPass)) ||
#                 (dataset == "MuEG" && (!isDoubleMuTriggerPass) && (!isDoubleElectronTriggerPass) && (!isTripleElectronTriggerPass) && isMuEGTriggerPass))'

weights:
    - RecoIDIsoSIPSF_2lep
    - weight_PU
    - topPtWgt
    - csvWgtlf
    - csvWgthf
    - triggerSF
    - tightCharge2LepSF
#     - lepMVATight2LepSF
    - lepCutTight2LepSF
#     #- lepMVATightSF_Lep1
#     #- lepMVATightSF_Lep2

systematics:
    - nominal
    - weight_PUUp
    - weight_PUDown
    - topPtWgtDown
    - topPtWgtUp
    - csvWeightHFUp
    - csvWeightHFDown
    - csvWeightLFUp
    - csvWeightLFDown

#weights: all ---> weight by everything in "weights" section above
#weights: none ---> don't apply any weight
#weights: all+weight1 ---> weight by everything in the "weights" section above, and also by weight1
#weights: all+weight1-weight2 ---> weight by everything in the "weights" section above except for weight2, and also by weight1
#weights: weight1+weight2 ---> weight only by weight1 and weight2
#same idea for systematics
samples:
    #VH_TauMu:
    ttH125:
    wz_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wz_lf_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wz_cc_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wz_b_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wz_bb_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_lf_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_cc_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_b_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_bb_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_lowmll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    www:
    wwz:
    #zjets_0p:
    #zjets_1p:
    #zjets_2p:
    #zjets_3p:
    #zjets_4p:
    #ttbar_lj:
    #ttbar_ll:
    ttbarW:
    ttbarWW:
    ttbarZ:
    ttbarG:
    ttbarGStar_ee:
    ttbarGStar_mm:
    ttbarGStar_tt:
    tbZ_ll:
    WpWpqq:
    #WmWmqq: #Does not exist yet
    WWDPI:
    inclusive_data:
        weights: none
        systematics: nominal
    DoubleMu:
        weights: none
        systematics: nominal
    MuEG:
        weights: none
        systematics: nominal
    DoubleElectron:
        weights: none
        systematics: nominal
#     inclusive_data_NP_sideband:
#         additional cuts: ['(all_leptons_by_pt_1_lepCut < 2 || all_leptons_by_pt_2_lepCut < 2)']
#         cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
#         weights: DataDrivenFR_NP_2_tight
#         systematics: [40PercentRateUp, 40PercentRateDown]
    DoubleMu_NP_sideband:
        tree sample: DoubleMu
        #additional cuts: ['((all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 1)']
        additional cuts: ['((all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) < 2)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight
        #weights: '0.18' # == 0.15/(1-0.15)
        #weights: '(0.24*((all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 1) - 0.0576*((all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 0))'
        systematics: [40PercentRateUp, 40PercentRateDown]
    MuEG_NP_sideband:
        tree sample: MuEG
        #additional cuts: ['((all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 1)']
        additional cuts: ['((all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) < 2)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight
        #weights: '( 0.15 + 0.03*( (all_leptons_by_pt_1_lepCut < all_leptons_by_pt_2_lepCut && all_leptons_by_pt_1_isMuon) || (all_leptons_by_pt_1_lepCut >= all_leptons_by_pt_2_lepCut && all_leptons_by_pt_2_isMuon) ) )'
        #weights: '( 0.17*((all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 1) + 0.07*( (all_leptons_by_pt_1_lepCut < all_leptons_by_pt_2_lepCut && all_leptons_by_pt_1_isMuon) || (all_leptons_by_pt_2_lepCut < all_leptons_by_pt_1_lepCut && all_leptons_by_pt_2_isMuon) ) - 0.0433*((all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 0) )'
        systematics: [40PercentRateUp, 40PercentRateDown]
    DoubleElectron_NP_sideband:
        tree sample: DoubleElectron
        #additional cuts: ['((all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 1)']
        additional cuts: ['((all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) < 2)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight
        #weights: '0.15' # == 0.13/(1-0.13)
        #weights: '(0.17*((all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 1) - 0.0289*((all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 0))'
        systematics: [40PercentRateUp, 40PercentRateDown]
#     inclusive_data_QF_sideband:
#         additional cuts: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == -1']
#         cuts to remove: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == 1']
#         weights: DataDrivenFR_NP_2_tight
#         systematics: [40PercentRateUp, 40PercentRateDown]
    MuEG_QF_sideband:
        additional cuts: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == -1']
        cuts to remove: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == 1']
        #weights: DataDrivenFR_QF_2_tight
        weights: DataDrivenFRLepCut_QF_2_tight
        systematics: [40PercentRateUp, 40PercentRateDown]
    DoubleElectron_QF_sideband:
        additional cuts: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == -1']
        cuts to remove: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == 1']
        #weights: DataDrivenFR_QF_2_tight
        weights: DataDrivenFRLepCut_QF_2_tight
        systematics: [40PercentRateUp, 40PercentRateDown]

aliases:
    - &default_num_bins 10

distributions:
    numAllLeptons:
        expression: numAllLeptons
        axis labels: ['number of leptons', Events]
        binning: [2, 1.5, 3.5]

    numAllMuons:
        expression: numAllMuons
        axis labels: ['number of muons', Events]
        binning: [4, -0.5, 3.5]

    numJets:
        expression: numJets
        axis labels: ['number of jets', Events]
        binning: [6, 1.5, 7.5]

    numLooseBJets:
        expression: numLooseBJets
        axis labels: ['number of loose b-tagged jets', Events]
        binning: [5, -0.5, 4.5]

    numMediumBJets:
        expression: numMediumBJets
        axis labels: ['number of medium b-tagged jets', Events]
        binning: [4, -0.5, 3.5]

    numTightBJets:
        expression: numTightBJets
        axis labels: ['number of tight b-tagged jets', Events]
        binning: [4, -0.5, 3.5]

    all_leptons_by_pt_1_pt:
        expression: all_leptons_by_pt_1_pt
        axis labels: ['First lepton pT', Events]
        binning: [*default_num_bins, 0, 300]

    all_leptons_by_pt_2_pt:
        expression: all_leptons_by_pt_2_pt
        axis labels: ['Second lepton pT', Events]
        binning: [*default_num_bins, 0, 100]

    all_leptons_by_pt_1_eta:
        expression: abs(all_leptons_by_pt_1_eta)
        axis labels: ['First lepton eta', Events]
        binning: [*default_num_bins, 0, 2.5]

    all_leptons_by_pt_2_eta:
        expression: abs(all_leptons_by_pt_2_eta)
        axis labels: ['Second lepton eta', Events]
        binning: [*default_num_bins, 0, 2.5]

    all_leptons_by_pt_1_jetBTagCSV:
        expression: all_leptons_by_pt_1_jetBTagCSV
        axis labels: ['First lepton jetBTagCSV', Events]
        binning: [11, -0.1, 1]

    all_leptons_by_pt_2_jetBTagCSV:
        expression: all_leptons_by_pt_2_jetBTagCSV
        axis labels: ['Second lepton jetBTagCSV', Events]
        binning: [11, -0.1, 1]

    max_lepton_jetBTagCSV:
        expression: max(all_leptons_by_pt_1_jetBTagCSV, all_leptons_by_pt_2_jetBTagCSV)
        axis labels: ['Max lepton jetBTagCSV', Events]
        binning: [11, -0.1, 1]

#     NP_lepton_jetBTagCSV:
#         expression: ((all_leptons_by_pt_2_lepCut <= all_leptons_by_pt_1_lepCut)*all_leptons_by_pt_2_jetBTagCSV + (all_leptons_by_pt_2_lepCut > all_leptons_by_pt_1_lepCut)*all_leptons_by_pt_1_jetBTagCSV)
#         axis labels: ['NP lepton jetBTagCSV', Events]
#         binning: [11, -0.1, 1]
                                
    jets_by_pt_1_pt:
        expression: jets_by_pt_1_pt
        axis labels: ['First jet pT', Events]
        binning: [*default_num_bins, 20, 300]

    jets_by_pt_2_pt:
        expression: jets_by_pt_2_pt
        axis labels: ['Second jet pT', Events]
        binning: [*default_num_bins, 20, 250]

    min_mass_leplep:
        expression: min_mass_leplep_all
        axis labels: ['min dilepton mass', Events]
        binning: [*default_num_bins, 81, 101]

    mass_lep1_lep2:
        expression: mass_lep1_lep2
        axis labels: ['lep1-lep2 mass', Events]
        binning: [*default_num_bins, 81, 101]

    met_pt:
        expression: met_pt
        axis labels: ['MET', Events]
        binning: [*default_num_bins, 0, 200]

    mht:
        expression: mht
        axis labels: ['MHT', Events]
        binning: [*default_num_bins, 0, 200]

    met_ld:
        expression: met_pt*0.6 + mht*0.4
        axis labels: ['MetLD', Events]
        binning: [*default_num_bins, 0, 200]

    sum_pt:
        expression: sum_pt
        axis labels: ['Sum pT', Events]
        binning: [*default_num_bins, 100, 1100]

    sum_jet_pt:
        expression: sum_jet_pt
        axis labels: ['Sum jet pT', Events]
        binning: [*default_num_bins, 0, 1000]

    mass_of_jets:
        expression: mass_of_jets
        axis labels: ['Mass of all jets', Events]
        binning: [*default_num_bins, 0, 1200]

    jets_MT_mass_ratio:
        expression: MT_of_jets / mass_of_jets
        axis labels: ['MT/mass of all jets', Events]
        binning: [*default_num_bins, 0, 1]

    everything_MT_mass_ratio:
        expression: MT_of_everything / mass_of_everything
        axis labels: ['MT/mass of everything', Events]
        binning: [*default_num_bins, 0, 1]

    MT_of_everything:
        expression: MT_of_everything
        axis labels: ['MT of everything', Events]
        binning: [*default_num_bins, 0, 1000]

    ttbar_fake_SS_top_mass_blep_qq:
        expression: ttbar_fake_SS_top_mass_blep_qq
        axis labels: ['ttbar fake top mass', Events]
        binning: [*default_num_bins, 0, 300]

    jets_by_CSV_2_btagCombinedSecVertex:
        expression: jets_by_CSV_2_btagCombinedSecVertex
        axis labels: ['second highest jet CSV', Events]
        binning: [11, -0.1, 1]

    Match_ttbar_fake_SS_Bq:
        expression: Match_ttbar_fake_SS_Bq
        axis labels: ['match score ttbar Bq', Events]
        binning: [*default_num_bins, -6, 2]

    Match_ttbar_fake_SS_Bqq:
        expression: Match_ttbar_fake_SS_Bqq
        axis labels: ['match score ttbar Bqq', Events]
        binning: [*default_num_bins, -6, 2]

    Match_ttW_SS_Bb:
        expression: Match_ttW_SS_Bb
        axis labels: ['match score ttW Bb', Events]
        binning: [*default_num_bins, -4, 2]

    Match_ttW_SS_Bq:
        expression: Match_ttW_SS_Bq
        axis labels: ['match score ttW Bq', Events]
        binning: [*default_num_bins, -4, 2]

    Match_ttW_SS_bq:
        expression: Match_ttW_SS_bq
        axis labels: ['match score ttW bq', Events]
        binning: [*default_num_bins, -6, 2]

    Match_ttW_SS_Bbq:
        expression: Match_ttW_SS_Bbq
        axis labels: ['match score ttW Bbq', Events]
        binning: [*default_num_bins, -6, 2]

    Match_ttW_SS_Bqq:
        expression: Match_ttW_SS_Bqq
        axis labels: ['match score ttW Bqq', Events]
        binning: [*default_num_bins, -8, 2]

    Match_ttW_SS_bqq:
        expression: Match_ttW_SS_bqq
        axis labels: ['match score ttW bqq', Events]
        binning: [*default_num_bins, -4, 2]

    Match_ttW_SS_Bbqq:
        expression: Match_ttW_SS_Bbqq
        axis labels: ['match score ttW Bbqq', Events]
        binning: [*default_num_bins, -8, 2]

    FinalBDT:
        expression: FinalBDT_ttW_SS
        axis labels: ['final BDT', Events]
        binning: [*default_num_bins, -1, 1]

    FinalBDT_QCD:
        expression: FinalBDT_ttW_SS_QCD
        axis labels: ['final BDT vs. QCD', Events]
        binning: [*default_num_bins, -1, 1]

limits distributions:
    twoBins:
        expression: all_leptons_by_pt_1_eta
        axis labels: ['first lepton eta', Events]
        binning: [2, -5, 5]

    numMediumBJets:
        expression: max(0, min(2, numMediumBJets))
        axis labels: ['number of medium b-tagged jets', Events]
        binning: [3, -0.5, 2.5]

    FinalBDT_QCD:
        expression: FinalBDT_ttW_SS_QCD
        axis labels: ['final BDT', Events]
        binning: [5, -1, 1]

    FinalBDT:
        expression: FinalBDT_ttW_SS
        axis labels: ['final BDT', Events]
        binning: [5, -1, 1]


