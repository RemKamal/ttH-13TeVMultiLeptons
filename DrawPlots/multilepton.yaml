label: os_v10
output label: os_v10
luminosity: 10000.0 
#input_trees_directory: /store/smallfiles/gsmith15/trees/test5
input_trees_directory: root://eoscms.cern.ch//eos/cms/store/user/gesmith/treedir/test1
output directory: histos/os_v10
#output direcotry: root://eoscms.cern.ch//eos/cms/store/user/gesmith/histdir/os_v2

# tree format is input_trees_directory/sample_lable_all.root ("all" comes from hadd-ing them)
# now is 

#options
skip systematics: true

#cuts
common cuts:
  
  eq_two_good_leptons: '(entry.preselected_leptons.size()>=2)'
  minDilepMass: '(entry.minMassLepLep > 12)'
  pt_20_10: '((entry.preselected_leptons[0].obj.Pt() > 20) and (entry.preselected_leptons[1].obj.Pt() > 10))'
  nJets25_ge_2: '(entry.preselected_jets.size()>=2)'
  nBJets: '(entry.loose_bJets.size() >=2 or entry.tight_bJets.size() >=1)'
  
jet tag categories:
  ge2j: ['(entry.preselected_jets.size() >= 2)']
#    eq3j: ['entry.preselected_jets.size() == 3']
#    ge4j: ['entry.preselected_jets.size() >= 4']
lepton categories:

  2lss:
    data samples: [inclusive_data]
    cuts:
      nLeptons: '((entry.preselected_leptons.size() == 2) and (entry.tight_leptons.size() == 2))'
      same-sign: '(entry.tight_leptons[0].charge == entry.tight_leptons[1].charge)'
      nJets: '(entry.preselected_jets.size() >= 4)'
      metLD: '(entry.metLD > 0.2)'
      pt_20_20: '(entry.tight_leptons[0].obj.Pt() > 20 and entry.tight_leptons[1].obj.Pt() > 20)'
      htllv100: '((entry.tight_leptons[0].obj.Pt() + entry.tight_leptons[1].obj.Pt() + entry.met[0].obj.Pt()) > 100)'
      ee_Zveto: '(entry.tight_electrons.size() != 2 or abs(entry.vetoZmass-91.2) > 10)'
      
      ee: '((abs(entry.tight_electrons.size()) !=2) or (entry.tight_electrons[0].isGsfCtfScPixChargeConsistent and entry.tight_electrons[1].isGsfCtfScPixChargeConsistent))'
      mumu: '((abs(entry.tight_muons.size()) != 2) or (entry.tight_muons[0].chargeFlip < 0.2 and entry.tight_muons[1].chargeFlip < 0.2))'
      emu: '((abs(entry.tight_electrons.size()) !=1) or (entry.tight_muons[0].chargeFlip < 0.2 and entry.tight_electrons[0].isGsfCtfScPixChargeConsistent))'

  3l:
    data samples: [inclusive_data]
    cuts:
      nLeptons: '(entry.preselected_leptons.size() == 3 and entry.tight_leptons.size() == 3)'
      metLD: '((entry.preselected_jets.size() >= 4) or (entry.metLD > 0.2 + 0.1*(entry.vetoZmassSFOS != 999.)))'
      zVeto: '((entry.vetoZmassSFOS == 999.) or (abs(entry.vetoZmassSFOS-91.2) > 10))'

  4l:
    data samples: [inclusive_data]
    cuts:
      nLeptons: '(entry.preselected_leptons.size() == 4)'
      neutral: '(entry.preselected_leptons[0].charge + entry.preselected_leptons[1].charge + entry.preselected_leptons[2].charge + entry.preselected_leptons[3].charge == 0)'
      zVeto: '((entry.vetoZmassSFOS == 999.) or (abs(entry.vetoZmassSFOS-91.2) > 10))'

weights:
#    - RecoIDIsoSIPSF_2lep #CERN lepton SF
#    #- lepIDAndIsoSF #ND lepton SF
#    - weight_PU
#    - topPtWgt
#    - csvWeight
#    - triggerSF
#    #- lepMVALoose2LepSF
#    - lepMVATight2LepSF
#    - tightCharge2LepSF
    - entry.wgt

systematics:
    - nominal
#    - weight_PUUp
#    - weight_PUDown
#    - topPtWgtDown
#    - topPtWgtUp
#    - csvWeightHFUp
#    - csvWeightHFDown
#    - csvWeightLFUp
#    - csvWeightLFDown

# Samples can indicate customized weights (default is common), systematics (default is common), additional cuts (default is none), and
# cuts to remove (default is none), and tree sample (default is same as sample name.) If an entry is missing, the default will be used.
# Options for weight/systematic customization are:
# none, common (use all listed in the common entry above), or a list.  Example: assume the common weights are weight1 and weight2.
# weights: common               --> weights = [weight1, weight2]
# weights: [common, weight3]    --> weights = [weight1, weight2, weight3]
# weights: [weight3]            --> weights = [weight3]
samples:
     WJets:
     ZJets:
     TTJets:
     TTZJets:
     TTWJets:
     WZJets:
     ttH125:
#    ttH125_tt:
#        tree sample: ttH125
#        additional cuts: [higgs_decay_type == 4]
#    ttH125_WW:
#        tree sample: ttH125
#        additional cuts: [higgs_decay_type == 2]
#    ttH125_ZZ:
#        tree sample: ttH125
#        additional cuts: [higgs_decay_type == 3]
#    inclusive_data:
#        weights: none
#        systematics: nominal
#     DoubleMu:
#         weights: none
#         systematics: nominal
#     MuEG:
#         weights: none
#         systematics: nominal
#     DoubleElectron:
#         weights: none
#         systematics: nominal

aliases:
    - &default_num_bins 101

distributions:
    numAllLeptons:
        #expression: '@preselected_leptons.size()'
        expression: entry.preselected_leptons.size()
        axis labels: [number of preselected leptons, Events]
        binning: [6, -0.5, 5.5]
        
    numLooseLeptons:
        #expression: '@loose_leptons.size()'
        expression: entry.loose_leptons.size()
        axis labels: [number of loose leptons, Events]
        binning: [6, -0.5, 5.5]
    
    numTightLeptons:
        #expression: '@tight_leptons.size()'
        expression: entry.tight_leptons.size()
        axis labels: [number of tight leptons, Events]
        binning: [6, -0.5, 5.5]
    

    numJets:
        #expression: numJets
        #expression: '@preselected_jets.size()'
        expression: entry.preselected_jets.size()
        axis labels: [number of jets, Events]
        binning: [20, -0.5, 19.5]

    # numLooseBJets:
    #     #expression: numLooseBJets
    #     expression: entry.numLooseBJets
    #     axis labels: [number of loose b-tagged jets, Events]
    #     binning: [5, 0.5, 5.5]

    # numMediumBJets:
    #     #expression: numMediumBJets
    #     expression: entry.numMediumBJets
    #     axis labels: [number of medium b-tagged jets, Events]
    #     binning: [5, -0.5, 4.5]

#    sum_lep1pt_lep2pt_met:
#        expression: preselected(@preselected_leptons.size()>0)
#        axis labels: ['Sum pT (lepton 1, lepton 2, MET)', Events]
#        binning: [*default_num_bins, 100, 600]

    mht:
        #expression: MHT
        expression: entry.MHT
        axis labels: ['MHT', Events]
        binning: [*default_num_bins, 0, 250]

#     mindr_lep2_jet:
#         expression: mindr_lep2_jet
#         axis labels: ['min dR (lepton 2, jet)', Events]
#         binning: [*default_num_bins, 0, 3]

#    met_1_all_leptons_by_pt_1_MT:
#	 expression: met_1_all_leptons_by_pt_1_MT
#	 axis labels: ['MT (lepton 1, MET)', Events]
#	 binning: [*default_num_bins, 0, 300]

#    met_1_all_leptons_by_pt_2_MT:
#	 expression: met_1_all_leptons_by_pt_2_MT
#	 axis labels: ['MT (lepton 2, MET)', Events]
#	 binning: [*default_num_bins, 0, 200]

    sum_pt:
        #expression: SumPt
        expression: entry.SumPt
        axis labels: ['Sum pT (leptons, jets)', Events]
        binning: [*default_num_bins, 200, 1200]

#    FinalBDT:
#	 expression: (FinalBDT_TwoMuon*(all_leptons_by_pt_1_isMuon+all_leptons_by_pt_2_isMuon == 2) + FinalBDT_MuonElectron*(all_leptons_by_pt_1_isMuon+all_leptons_by_pt_2_isMuon == 1) + FinalBDT_TwoElectron*(all_leptons_by_pt_1_isMuon+all_leptons_by_pt_2_isMuon == 0))
#	 axis labels: ['BDT output', Events]
#	 binning: [*default_num_bins, -0.8, 0.8]

#    FinalBDT_pos:
#	 expression: ((all_leptons_by_pt_1_tkCharge>0)*(FinalBDT_TwoMuon*(all_leptons_by_pt_1_isMuon+all_leptons_by_pt_2_isMuon == 2) + FinalBDT_MuonElectron*(all_leptons_by_pt_1_isMuon+all_leptons_by_pt_2_isMuon == 1) + FinalBDT_TwoElectron*(all_leptons_by_pt_1_isMuon+all_leptons_by_pt_2_isMuon == 0))) - 99*(all_leptons_by_pt_1_tkCharge<0)
#	 axis labels: ['BDT output, positive charge', Events]
#	 binning: [6, -0.8, 0.8]

#    FinalBDT_neg:
#	 expression: ((all_leptons_by_pt_1_tkCharge<0)*(FinalBDT_TwoMuon*(all_leptons_by_pt_1_isMuon+all_leptons_by_pt_2_isMuon == 2) + FinalBDT_MuonElectron*(all_leptons_by_pt_1_isMuon+all_leptons_by_pt_2_isMuon == 1) + FinalBDT_TwoElectron*(all_leptons_by_pt_1_isMuon+all_leptons_by_pt_2_isMuon == 0))) - 99*(all_leptons_by_pt_1_tkCharge>0)
#	 axis labels: ['BDT output, negative charge', Events]
#	 binning: [4, -0.8, 0.8]

#     all_leptons_by_pt_1_lepMVA:
#         expression: all_leptons_by_pt_1_lepMVA
#         axis labels: [First lepton MVA, Events]
#         binning: [*default_num_bins, 0.7, 1.0]

#     all_leptons_by_pt_2_lepMVA:
#         expression: all_leptons_by_pt_2_lepMVA
#         axis labels: [Second lepton MVA, Events]
#         binning: [*default_num_bins, 0.7, 1.0]

    all_leptons_by_pt_1_pt:
        #expression: 'preselected_leptons[0].obj.Pt()'
        expression: entry.loose_leptons[0].obj.Pt()
        axis labels: [First lepton pT, Events]
        binning: [*default_num_bins, 0, 400]

#    all_leptons_by_pt_2_pt:
#	 expression: all_leptons_by_pt_2_pt
#	 axis labels: [Second lepton pT, Events]
#	 binning: [*default_num_bins, 20, 120]

#    all_leptons_by_pt_1_eta:
#	 expression: abs(all_leptons_by_pt_1_eta)
#	 axis labels: [First lepton pseudorapidity, Events]
#	 binning: [*default_num_bins, 0, 2.5]

#    all_leptons_by_pt_2_eta:
#	 expression: abs(all_leptons_by_pt_2_eta)
#	 axis labels: [Second lepton pseudorapidity, Events]
#	 binning: [*default_num_bins, 0, 2.5]

#    all_leptons_by_pt_1_SIP:
#	 expression: abs(all_leptons_by_pt_1_SIP)
#	 axis labels: ['lepton 1 S_{IP}3D', Events]
#	 binning: [*default_num_bins, 0, 5]
        
#    all_leptons_by_pt_2_SIP:
#	 expression: abs(all_leptons_by_pt_2_SIP)
#	 axis labels: ['lepton 2 S_{IP}3D', Events]
#	 binning: [*default_num_bins, 0, 5]
        
#    all_leptons_by_pt_1_jetBTagCSV:
#	 expression: all_leptons_by_pt_1_jetBTagCSV
#	 axis labels: ['lepton 1 jetBTagCSV', Events]
#	 binning: [*default_num_bins, 0, 1]
        
#    all_leptons_by_pt_2_jetBTagCSV:
#	 expression: all_leptons_by_pt_2_jetBTagCSV
#	 axis labels: ['lepton 2 jetBTagCSV', Events]
#	 binning: [*default_num_bins, 0, 1]

#     jets_by_CSV_1_btagCombinedSecVertex:
#         expression: jets_by_CSV_1_btagCombinedSecVertex
#         axis labels: [First jet b-tag discriminant, Events]
#         binning: [*default_num_bins, 0, 1]

#     jets_by_CSV_4_btagCombinedSecVertex:
#         expression: jets_by_CSV_4_btagCombinedSecVertex
#         axis labels: [Fourth jet b-tag discriminant, Events]
#         binning: [*default_num_bins, 0, 1]

#     jets_by_pt_1_pt:
#         expression: jets_by_pt_1_pt
#         axis labels: [First jet pT, Events]
#         binning: [*default_num_bins, 20, 300]

#     jets_by_pt_4_pt:
#         expression: jets_by_pt_4_pt
#         axis labels: [Fourth jet pT, Events]
#         binning: [*default_num_bins, 20, 120]


# A.K.A. 'HT'
    SumJetPt:
        expression: entry.SumJetPt
        axis labels: [Sum Jet Pt, Events]
        binning: [*default_num_bins, 0, 1000]
               
        
    AvgBtagDiscNonBtags:
        expression: entry.AvgBtagDiscNonBtags
        axis labels: [Avg. BTag Disc (non-tags), Events]
        binning: [*default_num_bins, -1, 1]
    
    AvgBtagDiscBtags:
        expression: entry.AvgBtagDiscBtags
        axis labels: [Avg. BTag Disc. (tags), Events]
        binning: [*default_num_bins, -1, 1]
        
    MinDrJets:
        expression: entry.MinDrJets
        axis labels: [Min dR (Jets), Events]
        binning: [*default_num_bins, 0, 10]

    SumNonTaggedJetMass:
        expression: entry.SumNonTaggedJetMass
        axis labels: [SumNonTaggedJetMass, Events]
        binning: [*default_num_bins, 0, 500]
        
    HiggsLikeDijetMass2:
        expression: entry.HiggsLikeDijetMass2
        axis labels: [HiggsLikeDijetMass2, Events]
        binning: [*default_num_bins, 0, 500]
    
    HiggsLikeDijetMass:
        expression: entry.HiggsLikeDijetMass
        axis labels: [HiggsLikeDijetMass, Events]
        binning: [*default_num_bins, 0, 500]
    
    NumHiggsLikeDijet15:
        expression: entry.NumHiggsLikeDijet15
        axis labels: [NumHiggsLikeDijet15, Events]
        binning: [20, 0, 20]
    
    MaxDeltaPhiMetJet:
        expression: entry.MaxDeltaPhiMetJet
        axis labels: [MaxDeltaPhiMetJet, Events]
        binning: [*default_num_bins, -5, 5]
    
    MinDeltaPhiMetJet:
        expression: entry.MinDeltaPhiMetJet
        axis labels: [MinDeltaPhiMetJet, Events]
        binning: [*default_num_bins, -5, 5]
    
    DeltaPhiMetLep2:
        expression: entry.DeltaPhiMetLep2
        axis labels: [DeltaPhiMetLep2, Events]
        binning: [*default_num_bins, -5, 5]
    
    
    DeltaPhiMetLep1:
        expression: entry.DeltaPhiMetLep1
        axis labels: [DeltaPhiMetLep1, Events]
        binning: [*default_num_bins, -5, 5]
    
    
    WLikeDijetMass81:
        expression: entry.WLikeDijetMass81
        axis labels: [WLikeDijetMass81, Events]
        binning: [*default_num_bins, 0, 500]
    
    
    DeltaPhiLepLep:
        expression: entry.DeltaPhiLepLep
        axis labels: [DeltaPhiLepLep, Events]
        binning: [*default_num_bins, -5, 5]
    
    DeltaRLepLep:
        expression: entry.DeltaRLepLep
        axis labels: [DeltaRLepLep, Events]
        binning: [*default_num_bins, 0, 10]
    
    # Zmass:
    #     expression: entry.Zmass
    #     axis labels: [Zmass, Events]
    #     binning: [*default_num_bins, 0, 500]
    
    minMassLepLep:
        expression: entry.minMassLepLep
        axis labels: [minMassLepLep, Events]
        binning: [*default_num_bins, 0, 500]






